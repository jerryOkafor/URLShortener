name: Build Django API

on:
  push:
    branches:
      - main
    paths-ignore:
      - "web/**"
      - ".github/workflows/BuildWeb.yml"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "web/**"
      - ".github/workflows/BuildWeb.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - name: Cache PipEnv
        id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run tests
        run: |
          python manage.py test
#      - name: Run test suite
#        run: |
#          pipenv run test -svvv
#        env:
#          TEST_DB_HOST: localhost
#          TEST_DB_NAME: postgres
#          TEST_DB_PASS: postgres
#          TEST_DB_PORT: 5432
#          TEST_DB_USER: postgres
#
#      - name: Run linter
#        run: |
#          pipenv run lint
#      - name: Run formatting check
#        run: |
#          pipenv run format --check
#      - name: Setup node.js (for pyright)
#        uses: actions/setup-node@v1
#        with:
#          node-version: "12"
#
#      - name: Run type checking
#        run: |
#          npm install -g pyright
#          pipenv run typecheck
